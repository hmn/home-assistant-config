homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret elevation
  unit_system: metric
  currency: DKK
  temperature_unit: C
  time_zone: "Europe/Copenhagen"
  external_url: !secret external_url
  internal_url: !secret internal_url
  customize: !include customize.yaml
  packages: !include_dir_named packages

default_config:
config:
api:
system_health:
frontend:
  themes: !include_dir_merge_named themes
person:
browser_mod:

http:
  # Uncomment this to add a password (recommended!)
  # api_password: !secret password
  ssl_certificate: !secret ssl_certificate
  ssl_key: !secret ssl_key
  # Uncomment this if you are using SSL or running in Docker etc
  # base_url: example.duckdns.org:8123
  # depricated
  # base_url: !secret base_url
  use_x_forwarded_for: true
  trusted_proxies:
    - 192.168.8.0/24
    - 172.30.0.0/16
    - 10.0.0.0/8
  cors_allowed_origins:
    - https://google.com
    - https://home-assistant.io
    - https://www.home-assistant.io
  # trusted_networks:
  #   - 127.0.0.1
  #   - ::1
  #ip_ban_enabled: True
  #login_attempts_threshold: 5

# history_graph:
#   energy_today:
#     entities:
#       - sensor.smappee_power
#       - sensor.smappee_fase_1_power
#       - sensor.smappee_fase_2_power
#       - sensor.smappee_fase_3_power
#   temperature:
#     entities:
#       - sensor.bedroom_motion_sensor_1
#       - sensor.entrance_motion_sensor_1
#       - sensor.kitchen_motion_sensor_1_2


#influxdb:
#  host: 127.0.0.1
#  database: home_assistant
#  username: !secret influxdb_username
#  password: !secret influxdb_password
#  ssl: true
#  verify_ssl: false
#  default_measurement: state
#  blacklist:
#    - entity.id1
#    - entity.id2
#  whitelist:
#    - entity.id3
#    - entity.id4
#  tags:
#    instance: prod
#    source: hass

# influxdb:
#   host: !secret influxdb_host
#   port: 8086
#   database: home_assistant
#   username: !secret influxdb_username
#   password: !secret influxdb_password
#   max_retries: 3
#   default_measurement: state
#   tags:
#     source: hass

# panel_iframe:
#   grafana:
#     title: Grafana
#     icon: mdi:chart-timeline
#     url: !secret grafana_url
#   influxdb:
#     title: Chronograf
#     icon: mdi:chart-areaspline
#     url: !secret influxdb_url

#prometheus:

# Enables support for tracking state changes over time.
history:
  use_include_order: true
  exclude:
    domains:
      - script
      - weblink
      - homekit
      - updater
      - light
    entity_globs:
      - binary_sensor.hmnmbp*
      - sensor.hmnmbp*
      - sensor.clock*
      - sensor.date*
      - sensor.glances*
      - sensor.load_*m
      - sensor.time*
      - sensor.uptime*
      - input_boolean.*_motion
      - binary_sensor.*_motion_sensor_*
      - automation.motion*
      - automation.*lights_timer*
    entities:
      - sensor.date
      - sensor.time
      - sensor.time_utc
      - sensor.time_date
      - sensor.date_time
      - sensor.date_time_iso
      - sensor.date_time_utc
      - sensor.internet_time
      - sensor.henriks_iphone_battery_state
      - sensor.henriks_ipad_battery_state
      - sensor.smappee_power
      - sensor.smappee_usage_today
      - sensor.smappee_fase_1_power
      - sensor.smappee_fase_2_power
      - sensor.smappee_fase_3_power
      - sensor.henriks_iphone_bssid

# The recorder component is storing details in a database which then are handled by the history component.
recorder:
  db_url: !secret db_url
  exclude:
    domains:
      - weblink
      - homekit
      - uptime
      - updater
      - light
    entity_globs:
      - binary_sensor.hmnmbp*
      - sensor.hmnmbp*
      - sensor.clock*
      - sensor.date*
      - sensor.glances*
      - sensor.load_*m
      - sensor.time*
      - sensor.uptime*
      - input_boolean.*_motion
      - binary_sensor.*_motion_sensor_*
      - automation.motion*
      - automation.*lights_timer*
    entities:
      - sensor.date
      - sensor.time
      - sensor.time_utc
      - sensor.time_date
      - sensor.date_time
      - sensor.date_time_iso
      - sensor.date_time_utc
      - sensor.internet_time
      - sensor.henriks_iphone_battery_state
      - sensor.henriks_ipad_battery_state
      - sensor.henriks_iphone_bssid
    #event_types:
    #  - 

# View all events in a logbook
logbook:
  exclude:
    domains:
      - weblink
      - light
      - homekit
      - timer
      - uptime
      - updater
    entity_globs:
      - binary_sensor.hmnmbp*
      - sensor.hmnmbp*
      - sensor.clock*
      - sensor.date*
      - sensor.glances*
      - sensor.load_*m
      - sensor.time*
      - sensor.uptime*
      - input_boolean.*_motion
      - binary_sensor.*_motion_sensor_*
      - automation.motion*
      - automation.*lights_timer*
    entities:
      - sensor.date
      - sensor.time
      - sensor.time_utc
      - sensor.time_date
      - sensor.date_time
      - sensor.date_time_iso
      - sensor.date_time_utc
      - sensor.internet_time
      - sensor.henriks_iphone_battery_state
      - sensor.henriks_ipad_battery_state
      - sensor.smappee_power
      - sensor.smappee_usage_today
      - sensor.smappee_fase_1_power
      - sensor.smappee_fase_2_power
      - sensor.smappee_fase_3_power
      - sensor.henriks_iphone_bssid


cloud:
zeroconf:
ssdp:
ios:
alexa:
mobile_app:
prometheus:
energy:
sun:
wake_on_lan:

ifttt:
  key: !secret ifttt_key

mqtt:
  sensor:
    - name: Smappee power
      state_topic: "servicelocation/579acd67-d672-11e7-ac58-022d286959f5/realtime"
      unit_of_measurement: "W"
      icon: "mdi:power-plug"
      value_template: "{{ value_json.totalPower }}"
      device_class: power
      state_class: measurement

    - name: Smappee usage today (raw)
      state_topic: "servicelocation/579acd67-d672-11e7-ac58-022d286959f5/realtime"
      unit_of_measurement: "W"
      icon: "mdi:power-plug"
      value_template: "{{ value_json.totalImportEnergy }}"
      device_class: power
      state_class: measurement

    - name: Smappee usage today
      state_topic: "servicelocation/579acd67-d672-11e7-ac58-022d286959f5/realtime"
      unit_of_measurement: "kWh"
      icon: "mdi:power-plug"
      value_template: "{{ ((value_json.totalImportEnergy / 3600000) | float | round(2, default=0)) }}"
      device_class: energy
      state_class: measurement

    - name: Smappee fase 1 power
      state_topic: "servicelocation/579acd67-d672-11e7-ac58-022d286959f5/realtime"
      unit_of_measurement: "W"
      icon: "mdi:power-plug"
      value_template: "{{ value_json.channelPowers[0].power }}"
      device_class: power
      state_class: measurement

    - name: Smappee fase 2 power
      state_topic: "servicelocation/579acd67-d672-11e7-ac58-022d286959f5/realtime"
      unit_of_measurement: "W"
      icon: "mdi:power-plug"
      value_template: "{{ value_json.channelPowers[1].power }}"
      device_class: power
      state_class: measurement

    - name: Smappee fase 3 power
      state_topic: "servicelocation/579acd67-d672-11e7-ac58-022d286959f5/realtime"
      unit_of_measurement: "W"
      icon: "mdi:power-plug"
      value_template: "{{ value_json.channelPowers[2].power }}"
      device_class: power
      state_class: measurement

    - name: Smappee always on
      state_topic: "servicelocation/579acd67-d672-11e7-ac58-022d286959f5/aggregated"
      unit_of_measurement: "W"
      icon: "mdi:power-plug"
      value_template: "{{ (value_json.intervalDatas[0].alwaysOn | multiply(0.001)) | round(2, default=0) }}"
      device_class: power
      state_class: measurement

    - name: Smappee server power
      state_topic: "servicelocation/579acd67-d672-11e7-ac58-022d286959f5/aggregatedSwitch"
      unit_of_measurement: "W"
      icon: "mdi:power-plug"
      # value_template: "{{ (value_json.switchIntervalDatas[0].activePower | multiply(0.001)) | round(2, default=0) }}"
      value_template: >-
        {% if value_json.switchIntervalDatas %}
          {{ (value_json.switchIntervalDatas[0].activePower | multiply(0.001)) | round(2, default=0) }}
        {% else %}
          0
        {% endif %}
      device_class: power
      state_class: measurement

    - name: Smappee cinema power
      state_topic: "servicelocation/579acd67-d672-11e7-ac58-022d286959f5/aggregatedSwitch"
      unit_of_measurement: "W"
      icon: "mdi:power-plug"
      # value_template: "{{ (value_json.switchIntervalDatas[1].activePower | multiply(0.001)) | round(2, default=0) }}"
      value_template: >-
        {% if value_json.switchIntervalDatas %}
          {{ (value_json.switchIntervalDatas[1].activePower | multiply(0.001)) | round(2, default=0) }}
        {% else %}
          0
        {% endif %}
      device_class: power
      state_class: measurement


homekit:
  filter:
    include_domains:
      - script
      - input_boolean
      - switch
      - timer

# smappee:
#   host: 192.168.7.116
#   client_id: !secret smappee_client_id
#   client_secret: !secret smappee_client_secret
#   username: !secret smappee_username
#   password: !secret smappee_password

apple_tv:
  host: 192.168.8.199
#  login_id: !secret apple_tv_login_id
#  credentials: !secret apple_tv_credentials

denonavr:
  host: 192.168.8.198

# logi_circle:
#   client_id: !secret logi_circle_client_id
#   client_secret: !secret logi_circle_client_secret
#   api_key: !secret logi_circle_api_key
#   redirect_uri: !secret logi_circle_redirect_url

#nest:
#  client_id: !secret nest_client_id
#  client_secret: !secret nest_client_secret

nissan_leaf:
  username: !secret nissan_leaf_username
  password: !secret nissan_leaf_password
  region: !secret nissan_leaf_region

roomba:
  - host: !secret roomba_host
    blid: !secret roomba_username
    password: !secret roomba_password

# withings:
#   client_id: !secret withings_client_id
#   client_secret: !secret withings_client_secret
#   use_webhook: true

plex:
  host: !secret plex_host
  port: 32400
  token: !secret plex_token
  ssl: true
  verify_ssl: false
  media_player:
    use_episode_art: true

#hue:
#  bridges:
#    - host: 192.168.7.105
#      allow_hue_groups: true

# webostv:
#   host: 192.168.8.197
#   name: LG OLED
#   turn_on_action:
#     service: wake_on_lan.send_magic_packet
#     data:
#       mac: !secret lg_oled_wifi_mac
#   customize:
#     sources:
#     - Apple TV
#     - PS5
#     - HDMI4
#     - Netflix
#     - YouTube
#     - Plex

#spotify:
#  client_id: !secret spotify_client_id
#  client_secret: !secret spotify_client_secret

weather:
  - platform: darksky
    api_key: !secret darksky_api_key

#cast:
stream:

#netatmo:
#  client_id: !secret netatmo_client_id
#  client_secret: !secret netatmo_client_secret

aws:
  credentials:
    - name: hass
      aws_access_key_id: !secret aws_access_key_id
      aws_secret_access_key: !secret aws_secret_access_key
  notify:
    - service: sns
      name: awssns
      region_name: !secret aws_region_name

utility_meter:
  smappee_usage_hourly:
    source: sensor.smappee_usage_today
    name: Smappee hourly energy
    cycle: hourly
  smappee_usage_daily:
    source: sensor.smappee_usage_today
    name: Smappee daily energy
    cycle: daily
  smappee_usage_monthly:
    source: sensor.smappee_usage_today
    name: Smappee monthly energy
    cycle: monthly
  energy_spent_hourly:
    source: sensor.energy_spent
    name: Hourly energy spent
    cycle: hourly
  energy_spent_daily:
    source: sensor.energy_spent
    name: Daily energy spent
    cycle: daily
  energy_spent_monthly:
    source: sensor.energy_spent
    name: Monthly energy spent
    cycle: monthly
  car_charger_spent_hourly:
    source: sensor.car_charger_spent
    name: Hourly car charger spent
    cycle: hourly
  car_charger_spent_daily:
    source: sensor.car_charger_spent
    name: Daily car charger spent
    cycle: daily
  car_charger_spent_monthly:
    source: sensor.car_charger_spent
    name: Monthly car charger spent
    cycle: monthly

# rest_command:
#   particle_relay1_on:
#     url: !secret particle_relay_post_url
#     method: post
#     payload: '{ "arg": "relay1:on" }'
#     timeout: 5
#     content_type: 'application/json'
#   particle_relay1_off:
#     url: !secret particle_relay_post_url
#     method: post
#     payload: '{ "arg": "relay1:off" }'
#     timeout: 5
#     content_type: 'application/json'

timer:
  sleep:
    duration: '00:30:00'
    icon: mdi:sleep
  entrance_lights:
    duration: '00:10:00'
    icon: mdi:lightbulb-on
  kitchen_lights:
    duration: '00:10:00'
    icon: mdi:lightbulb-on
  bedroom_lights:
    duration: '00:10:00'
    icon: mdi:lightbulb-on
  office_lights:
    duration: '01:00:00'
    icon: mdi:lightbulb-on
  fan_direction_timer:
    duration: '01:00:00'
    icon: mdi:fan
  fan_speed_timer:
    duration: '01:00:00'
    icon: mdi:fan
  fan_power_timer:
    duration: '00:30:00'
    icon: mdi:fan

#nordpool:
#pfsense:
#eloverblik:
#wavinsentio:
#zaptec:
python_script:

switch:
  - platform: command_line
    scan_interval: 120
    switches:
      bedroom_fan:
        friendly_name: Bedroom fan power
        command_on: "python3 custom_scripts/fan_control.py --ip 192.168.8.249 --command on --print power"
        command_off: "python3 custom_scripts/fan_control.py --ip 192.168.8.249 --command off --print power"
        command_state: "python3 custom_scripts/fan_control.py --ip 192.168.8.249 --command status --print power"
        value_template: '{{ value == "01" }}'
      livingroom_fan:
        friendly_name: Livingroom fan power
        command_on: "python3 custom_scripts/fan_control.py --ip 192.168.8.248 --command on --print power"
        command_off: "python3 custom_scripts/fan_control.py --ip 192.168.8.248 --command off --print power"
        command_state: "python3 custom_scripts/fan_control.py --ip 192.168.8.248 --command status --print power"
        value_template: '{{ value == "01" }}'
      genie_deployments:
        friendly_name: Genie App deployments
        command_on: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/ssh/id_rsa hmn@192.168.8.2 '~/kube-app-start.sh'"
        command_off: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/ssh/id_rsa hmn@192.168.8.2 '~/kube-app-stop.sh'"
        command_state: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/ssh/id_rsa hmn@192.168.8.2 '~/kube-app-status.sh'"
  - platform: template
    switches:
      bedroom_fan:
        friendly_name: Bedroom fan power
        turn_on:
          service: python_script.bedroom_fan
          data:
            ip: 192.168.8.249
            command: on
            print: power
        turn_off:
          service: python_script.bedroom_fan
          data:
            ip: 192.168.8.249
            command: off
            print: power
      servers:
        friendly_name: Servers
        turn_on:
          service: script.servers_on
        turn_off:
          service: script.servers_off        
  - platform: wake_on_lan
    name: LG OLED
    host: 192.168.8.197
    mac: !secret lg_oled_wifi_mac
    turn_off:
      service: media_player.turn_off
      data:
        entity_id: media_player.lg_oled
  - platform: wake_on_lan
    name: Synology power state
    host: 192.168.8.10
    mac: 00:11:32:c6:cd:7b
    turn_off:
      service: button.press
      data:
        entity_id: button.alladin_shutdown

template:
  - sensor:
      - name: "Car charger power"
        #icon: mdi:power-plug
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'total_charge_power') | round(0, default=0) }}"

      - name: "Car charger voltage"
        #icon: mdi:flash
        device_class: "voltage"
        unit_of_measurement: "V"
        state_class: "measurement"
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'voltage_phase1') | round(0, default=0) }}"

      - name: "Car charger temperature"
        #icon: mdi:thermometer
        device_class: "temperature"
        unit_of_measurement: '°C'
        state_class: "measurement"
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'temperature_internal5') | round(2, default=0) }}"

      - name: "Car charger humidity"
        #icon: mdi:water-percent
        device_class: "humidity"
        unit_of_measurement: "%"
        state_class: "measurement"
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'humidity') | round(0, default=0) }}"

      - name: "Car charger energy session"
        #icon: mdi:counter
        device_class: "energy"
        unit_of_measurement: "kWh"
        state_class: "measurement"
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'total_charge_power_session') | round(2, default=0) }}"

      - name: "Car charger energy total"
        #icon: mdi:counter
        device_class: "energy"
        unit_of_measurement: "kWh"
        state_class: "total_increasing"
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'signed_meter_value_kwh') }}"

      - name: "Car charger current"
        #icon: mdi:current-ac
        device_class: "current"
        unit_of_measurement: "A"
        state_class: "measurement"
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'current_phase1') | round(0, default=0) }}"

      - name: "Car charger allocated current"
        #icon: mdi:waves
        device_class: "current"
        unit_of_measurement: "A"
        state_class: "measurement"
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'charge_current_set') | round(0, default=0) }}"

      - name: "Car charger signal strength"
        icon: mdi:wifi-strength-outline
        device_class: "signal_strength"
        unit_of_measurement: "dBm"
        state_class: "measurement"
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'communication_signal_strength') }}"

      - name: "Car charger software app firmware"
        icon: mdi:label
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'smart_computer_software_application_version') }}"

      - name: "Car charger current firmware"
        icon: mdi:label
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'current_firmware_version') }}"

      - name: "Car charger available firmware"
        icon: mdi:label
        state: "{{ state_attr('sensor.zaptec_charger_zap016548', 'available_firmware_version') }}"

      - name: "Car charger mode"
        icon: mdi:alpha-z-circle-outline
        state: >-
          {% if is_state_attr('sensor.zaptec_charger_zap016548', 'charger_operation_mode', '1') %}
            Disconnected
          {% elif is_state_attr('sensor.zaptec_charger_zap016548', 'charger_operation_mode', '2') %}
            Waiting
          {% elif is_state_attr('sensor.zaptec_charger_zap016548', 'charger_operation_mode', '3') %}
            Charging
          {% elif is_state_attr('sensor.zaptec_charger_zap016548', 'charger_operation_mode', '5') %}
            Finished
          {% else %}
            Unknown
          {% endif %}

      - name: NordPool today hr 00:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[0] }}'

      - name: NordPool today hr 01:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[1] }}'

      - name: NordPool today hr 02:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[2] }}'

      - name: NordPool today hr 03:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[3] }}'

      - name: NordPool today hr 04:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[4] }}'

      - name: NordPool today hr 05:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[5] }}'

      - name: NordPool today hr 06:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[6] }}'

      - name: NordPool today hr 07:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[7] }}'

      - name: NordPool today hr 08:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[8] }}'

      - name: NordPool today hr 09:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[9] }}'

      - name: NordPool today hr 10:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[10] }}'
      
      - name: NordPool today hr 11:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[11] }}'

      - name: NordPool today hr 12:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[12] }}'

      - name: NordPool today hr 13:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[13] }}'

      - name: NordPool today hr 14:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[14] }}'

      - name: NordPool today hr 15:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[15] }}'

      - name: NordPool today hr 16:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[16] }}'

      - name: NordPool today hr 17:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[17] }}'

      - name: NordPool today hr 18:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[18] }}'

      - name: NordPool today hr 19:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[19] }}'

      - name: NordPool today hr 20:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[20] }}'

      - name: NordPool today hr 21:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[21] }}'

      - name: NordPool today hr 22:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[22] }}'

      - name: NordPool today hr 23:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "today")[23] }}'

      - name: NordPool tomorrow hr 00:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[0] }}'

      - name: NordPool tomorrow hr 01:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[1] }}'

      - name: NordPool tomorrow hr 02:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[2] }}'

      - name: NordPool tomorrow hr 03:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[3] }}'

      - name: NordPool tomorrow hr 04:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[4] }}'

      - name: NordPool tomorrow hr 05:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[5] }}'

      - name: NordPool tomorrow hr 06:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[6] }}'

      - name: NordPool tomorrow hr 07:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[7] }}'

      - name: NordPool tomorrow hr 08:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[8] }}'

      - name: NordPool tomorrow hr 09:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[9] }}'

      - name: NordPool tomorrow hr 10:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[10] }}'
      
      - name: NordPool tomorrow hr 11:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[11] }}'

      - name: NordPool tomorrow hr 12:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[12] }}'

      - name: NordPool tomorrow hr 13:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[13] }}'

      - name: NordPool tomorrow hr 14:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[14] }}'

      - name: NordPool tomorrow hr 15:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[15] }}'

      - name: NordPool tomorrow hr 16:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[16] }}'

      - name: NordPool tomorrow hr 17:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[17] }}'

      - name: NordPool tomorrow hr 18:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[18] }}'

      - name: NordPool tomorrow hr 19:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[19] }}'

      - name: NordPool tomorrow hr 20:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[20] }}'

      - name: NordPool tomorrow hr 21:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[21] }}'

      - name: NordPool tomorrow hr 22:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[22] }}'

      - name: NordPool tomorrow hr 23:00
        device_class: "monetary"
        unit_of_measurement: DKK
        state_class: "measurement"
        state: '{{ state_attr("sensor.nordpool_kwh_dk1_dkk_3_095_025", "tomorrow")[23] }}'

      - name: "Other power"
        device_class: "power"
        unit_of_measurement: "W"
        state_class: "measurement"
        state: >
          {% set total = states('sensor.smappee_power') | float(default=0.0) %}
          {% set server = states('sensor.smappee_server_power') | float(default=0.0) %}
          {% set cinema = states('sensor.smappee_cinema_power') | float(default=0.0) %}
          {% set car = states('sensor.car_charger_power') | float(default=0.0) %}
          {{ (total - (server + cinema + car)) | round(1, default=0) }}

      - name: "Kitchen Temperature"
        device_class: "temperature"
        unit_of_measurement: '°C'
        state_class: "measurement"
        state: >
          {% set count = 0 %}
          {% set netatmo = states('sensor.netatmo_kitchen_temperature') | float(default=0.0) %}
          {% set motion1 = states('sensor.kitchen_motion_sensor_1_temperature') | float(default=0.0) %}
          {% set count = count + 1 if is_number(netatmo) and netatmo > 0.0 else count %}
          {% set count = count + 1 if is_number(motion1) and motion1 > 0.0 else count %}
          {{ ((netatmo + motion1) / count) | round(1, default=0) }}

      - name: "Entrance Temperature"
        device_class: "temperature"
        unit_of_measurement: '°C'
        state_class: "measurement"
        state: >
          {% set count = 0 %}
          {% set netatmo = states('sensor.netatmo_entrance_temperature') | float(default=0.0) %}
          {% set door = states('sensor.entrance_motion_sensor_1_temperature') | float(default=0.0) %}
          {% set wall = states('sensor.entrance_motion_sensor_2_temperature') | float(default=0.0) %}
          {% set count = count + 1 if is_number(netatmo) and netatmo > 0.0 else count %}
          {% set count = count + 1 if is_number(door) and door > 0.0 else count %}
          {% set count = count + 1 if is_number(wall) and wall > 0.0 else count %}
          {{ ((netatmo + door + wall) / count) | round(1, default=0) }}

      - name: "Bedroom Temperature"
        device_class: "temperature"
        unit_of_measurement: '°C'
        state_class: "measurement"
        state: >
          {% set count = 0 %}
          {% set netatmo = states('sensor.netatmo_bedroom_temperature') | float(default=0.0) %}
          {% set motion1 = states('sensor.bedroom_motion_sensor_1_temperature') | float(default=0.0) %}
          {% set ac = states('sensor.bedroom_room_temperature') | float(default=0.0) %}
          {% set count = count + 1 if is_number(netatmo) and netatmo > 0.0 else count %}
          {% set count = count + 1 if is_number(motion1) and netatmo > 0.0 else count %}
          {% set count = count + 1 if is_number(ac) and netatmo > 0.0 else count %}
          {{ ((netatmo + motion1 + ac) / count) | round(1, default=0) }}

  - binary_sensor:
      - name: "Car charger firmware"
        #icon: mdi:update
        device_class: update
        state: '{{ state_attr("sensor.zaptec_charger_zap016548", "firmware_update_to_date") != true }}'

      - name: "Car charger warnings"
        #icon: mdi:alert-circle-outline
        device_class: problem
        state: '{{ state_attr("sensor.zaptec_charger_zap016548", "warnings") }}'

      - name: "Car charger state"
        device_class: connectivity
        icon: >-
          {% if is_state_attr('sensor.zaptec_charger_zap016548', 'is_online', '1') %}
            mdi:access-point-network
          {% else %}
            mdi:access-point-network-off
          {% endif %}
        state: "{{ is_state_attr('sensor.zaptec_charger_zap016548', 'is_online', '1') }}"


#python_script:

shell_command:
  #livingroom_fan_speed: echo -n -e '\x6d\x6f\x62\x69\x6c\x65\x04\x03\x0d\x0a' | nc -w 1 -u -n 192.168.9.248 4000
  #livingroom_fan_status: python custom_scripts/fan_control.py --ip 192.168.9.248 --command status --print power
  #livingroom_fan_power: python custom_scripts/fan_control.py --ip 192.168.9.248 --command power --print power
  bedroom_fan_speed: python3 custom_scripts/fan_control.py --ip 192.168.8.249 --command speed --speed {{speed}} --print speed
  bedroom_fan_direction: python3 custom_scripts/fan_control.py --ip 192.168.8.249 --command direction --direction {{direction}} --print direction
  livingroom_fan_speed: python3 custom_scripts/fan_control.py --ip 192.168.8.248 --command speed --speed {{speed}} --print speed
  livingroom_fan_direction: python3 custom_scripts/fan_control.py --ip 192.168.8.248 --command direction --direction {{direction}} --print direction  
  #livingroom_fan_speed_var: echo -n -e '\x6d\x6f\x62\x69\x6c\x65\x04\x'{{speed}}'\x0d\x0a' | nc -w 1 -u -n 192.168.9.248 4000
  smappee_reboot: bash /config/shell_scripts/smappee_reboot.sh

light: !include light.yaml
input_boolean: !include input_boolean.yaml
input_number: !include input_number.yaml
input_select: !include input_select.yaml
notify: !include notify.yaml
sensor: !include_dir_merge_list sensors
zone: !include zones.yaml
scene: !include scenes.yaml

script: !include scripts.yaml
script old: !include_dir_merge_named scripts

automation: !include automations.yaml
automation old: !include_dir_merge_list automation  

logger:
  #default: debug
  #default: info
  default: warning
  logs:
    # log level for the `aiohttp` Python package
    #aiohttp: debug
    #urllib3: debug
    # http debug
    #homeassistant.components.http: debug
    #custom_components.media_player.ps4: debug
    #homeassistant.components.smappee: error
    #homeassistant.components.mqtt: error
    #homeassistant.components.mqtt: debug
    #homeassistant.deconz: debug
    #homeassistant.components.deconz: debug
    #pydeconz: debug
    #py.warnings: error
    #pyps4: debug
    #smappy: debug
    #pyps4.connection: debug
    #pylgtv.webos_client: critical
    #aiounifi: debug
    #homeassistant.components.unifi: debug
    #homeassistant.components.switch.unifi: debug
    #homeassistant.components.nissan_leaf: debug
    #homeassistant.components.device_tracker.nissan_leaf: debug
    #homeassistant.components.sensor.nissan_leaf: debug
    #homeassistant.components.switch.nissan_leaf: debug
    homeassistant.components.shell_command: debug
    #pyatv: debug
    #homeassistant.components.apple_tv: debug
    homeassistant.components.nissan_leaf: debug
    homeassistant.components.sensor.nissan_leaf: debug
    homeassistant.components.switch.nissan_leaf: debug
    # eloverblik: debug
    # pyeloverblik.eloverblik: debug
    # custom_components.eloverblik: debug
    # nordpool: debug
    # custom_components.nordpool: debug
    # custom_components.nordpool.sensor: debug
    # custom_components.nordpool.aio_price: debug
    # custom_components: debug
    # log level for HA core
    homeassistant.core: fatal
    # log level for MQTT integration
    homeassistant.components.mqtt: warning
    # log level for all python scripts
    homeassistant.components.python_script: info
    # individual log level for this python script
    homeassistant.components.python_script.fan_control.py: debug
    # log level for a custom component
    # custom_components.my_integration: debug
    # log level for the `aiohttp` Python package
    aiohttp: error
    # log level for both 'glances_api' and 'glances' integration
    homeassistant.components.glances: fatal
    glances_api: fatal
    homeassistant.components.switch: debug
    homeassistant.components.command_line: debug
