- alias: "Kitchen lights timer started"
  trigger:
    - platform: event
      event_type: timer.started
      event_data:
        entity_id: timer.kitchen_lights
    - platform: event
      event_type: timer.restarted
      event_data:
        entity_id: timer.kitchen_lights
  condition:
    - condition: state
      entity_id: input_boolean.sleep
      state: 'off'
    - condition: state
      entity_id: input_boolean.home
      state: 'on'
    - condition: state
      entity_id: binary_sensor.kitchen_office
      state: 'off'
    - condition: state
      entity_id: binary_sensor.daylight_office
      state: 'off'
  action:
    - service: light.turn_on
      data:
        brightness: 255
        entity_id:
          - light.kitchen
          - light.kitchen_lights

- alias: "Kitchen enought light detected"
  trigger:
    - platform: state
      entity_id: binary_sensor.daylight_kitchen
      state: 'on'
      for:
        minutes: 5
  action:
    service: timer.cancel
    entity_id:
      - timer.kitchen_lights

- alias: "Kitchen lights timer done"
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.kitchen_lights
  action:
    service: light.turn_off
    data:
      entity_id:
        - light.kitchen
        - light.kitchen_lights

- alias: "Motion in Kitchen"
  trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_motion_sensor_1
      to: 'on'
    - platform: state
      entity_id: input_boolean.kitchen_motion
      to: 'on'
  action:
    - service: timer.start
      entity_id: timer.kitchen_lights
    - service: timer.start
      entity_id: timer.office_lights

# - alias: "Motion stopped in Kitchen"
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.kitchen_motion_sensor_1
#       to: 'off'
#       for:
#         minutes: 30
#   condition:
#     - condition: state
#       entity_id: timer.kitchen_lights
#       state: 'idle'
#   action:
#     service: timer.finish
#     entity_id: timer.kitchen_lights


- alias: "Office lights timer started"
  trigger:
    - platform: event
      event_type: timer.started
      event_data:
        entity_id: timer.office_lights
    - platform: event
      event_type: timer.restarted
      event_data:
        entity_id: timer.office_lights
  condition:
    - condition: state
      entity_id: input_boolean.sleep
      state: 'off'
    - condition: state
      entity_id: input_boolean.home
      state: 'on'
    - condition: state
      entity_id: binary_sensor.daylight_kitchen
      state: 'off'
    - condition: state
      entity_id: binary_sensor.daylight_office
      state: 'off'
  action:
    - service: light.turn_on
      data:
        brightness: 255
        entity_id:
          - light.office
          - light.living_room
          - light.office_lights
          - light.living_room_lights
    - service: hue.hue_activate_scene
      data:
        group_name: "Cinema"
        scene_name: "Hass"

- alias: "Office enought light detected"
  trigger:
    - platform: state
      entity_id: binary_sensor.daylight_office
      state: 'on'
      for:
        minutes: 5
  action:
    service: timer.cancel
    entity_id:
      - timer.office_lights

- alias: "Office lights timer done"
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.office_lights
  condition:
    - platform: state
      entity_id: binary_sensor.daylight_office
      state: 'on'
      for:
        minutes: 5
  action:
    service: light.turn_off
    data:
      entity_id:
        - light.office
        - light.cinema
        - light.living_room
        - light.office_lights
        - light.cinema_lights
        - light.living_room_lights

- alias: "Motion in Office"
  trigger:
    - platform: state
      entity_id: binary_sensor.office_motion_sensor_1
      to: 'on'
    - platform: state
      entity_id: input_boolean.office_motion
      to: 'on'
  action:
    - service: timer.start
      entity_id: timer.office_lights
    - service: timer.start
      entity_id: timer.kitchen_lights


- alias: "Bedroom lights timer started"
  trigger:
    - platform: event
      event_type: timer.started
      event_data:
        entity_id: timer.bedroom_lights
    - platform: event
      event_type: timer.restarted
      event_data:
        entity_id: timer.bedroom_lights
  condition:
    - condition: state
      entity_id: input_boolean.sleep
      state: 'off'
    - condition: state
      entity_id: input_boolean.home
      state: 'on'
    - condition: state
      entity_id: binary_sensor.daylight_bedroom
      state: 'off'
  action:
    - service: light.turn_on
      data:
        brightness: 255
        entity_id:
          - light.bedroom

- alias: "Bedroom lights timer done"
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.bedroom_lights
  action:
    service: light.turn_off
    data:
      entity_id:
        - light.bedroom
        - light.bedroom_lights

- alias: "Motion in Bedroom"
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_motion_sensor_1
      to: 'on'
    - platform: state
      entity_id: input_boolean.bedroom_motion
      to: 'on'
  action:
    - service: timer.start
      entity_id: timer.bedroom_lights

# - alias: "Motion stopped in Bedroom"
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.bedroom_motion_sensor_1
#       to: 'off'
#       for:
#         minutes: 30
#   condition:
#     - condition: state
#       entity_id: timer.bedroom_lights
#       state: 'idle'
#   action:
#     service: timer.finish
#     entity_id: timer.bedroom_lights


- alias: "Entrance lights timer started"
  trigger:
    - platform: event
      event_type: timer.started
      event_data:
        entity_id: timer.entrance_lights
    - platform: event
      event_type: timer.restarted
      event_data:
        entity_id: timer.entrance_lights
  condition:
    - condition: state
      entity_id: input_boolean.sleep
      state: 'off'
    - condition: state
      entity_id: input_boolean.home
      state: 'on'
  action:
    - service: light.turn_on
      data:
        brightness: 255
        entity_id:
          - light.entrance
          - light.entrance_lights

- alias: "Entrance lights timer done"
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.entrance_lights
  action:
    service: light.turn_off
    data:
      entity_id:
        - light.entrance
        - light.entrance_lights

- alias: "Motion in Entrance"
  trigger:
    - platform: state
      entity_id: binary_sensor.entrance_motion_sensor_1
      to: 'on'
    - platform: state
      entity_id: binary_sensor.entrance_motion_sensor_2
      to: 'on'
    - platform: state
      entity_id: input_boolean.entrance_motion
      to: 'on'
  action:
    - service: timer.start
      entity_id:
        - timer.entrance_lights
        - timer.kitchen_lights

# - alias: "Motion stopped in Entrance"
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.entrance_motion_sensor_1
#       to: 'off'
#       for:
#         minutes: 30
#     - platform: state
#       entity_id: binary_sensor.entrance_motion_sensor_2
#       to: 'off'
#       for:
#         minutes: 30
#   condition:
#     - condition: state
#       entity_id: timer.entrance_lights
#       state: 'idle'
#   action:
#     service: timer.finish
#     entity_id: timer.entrance_lights
